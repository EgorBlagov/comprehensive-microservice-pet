[tool.poetry]
name = "comprehensive-microservice"
version = "0.1.0"
description = "A project to learn microservice stack"
authors = ["Dmitry Savinskikh <d.savinskikh@gmail.com>", "Egor Blagov <e.m.blagov@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "comprehensive_microservice"}]

[tool.poetry.dependencies]
python = "^3.10"
aiohttp = "^3.8.5"
pydantic = "^2.1.1"
SQLAlchemy = "^2.0.19"
fastapi = "^0.101.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^22.12.0"
flake8 = "^6.0.0"
flake8-bugbear = "^23.1.20"
pre-commit = "^3.0.4"
mypy = "^1.4.1"
flake8-eradicate = "^1.5.0"
isort = "^5.12.0"
httpx = "^0.24.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
pythonpath = "."

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.10"

enable_error_code = ["truthy-bool", "ignore-without-code"]
check_untyped_defs = true
strict_optional = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
show_error_codes = true
show_column_numbers = true
pretty = true
ignore_missing_imports = true
